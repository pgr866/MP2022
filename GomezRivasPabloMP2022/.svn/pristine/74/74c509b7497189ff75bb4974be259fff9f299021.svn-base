package org.mp.sesion02;

/**
 * Clase que representa la busqueda
 * 
 * @author Pablo
 * @version 1.0
 */
public class Busqueda {

	/**
	 * Metodo de clase que realiza la Busqueda Binaria
	 * 
	 * @param <E>   tipo generico formal
	 * @param a     es array que queremos realizar la busqueda
	 * @param clave es el valor que estamos buscando dentro del array
	 * @return posicion de la clave en el array
	 * @throws ExcepcionArrayVacio es la excepcion que devuelve cuando el array esta
	 *                             vacio
	 */
	public static <E extends Comparable<E>> int busquedaBinaria(E[] a, E clave) throws ExcepcionArrayVacio {

		if (a.length == 0)
			throw new ExcepcionArrayVacio("Array vacÃ­o");

		int primero = 0;
		int ultimo = a.length - 1;
		int central;
		if (clave.compareTo(a[0]) < 0 || clave.compareTo(a[a.length - 1]) > 0) // clave menor que el primer valor
			return -1; // o mayor que el último valor
		else {
			while (ultimo >= primero) {
				central = (primero + ultimo) / 2;
				if (clave.compareTo(a[central]) < 0) // subarray izquierdo
					ultimo = central - 1;
				else if (clave.compareTo(a[central]) > 0) // subarray derecho
					primero = central + 1;
				else
					return central;
			}
			return -1;
		}
	}

}
